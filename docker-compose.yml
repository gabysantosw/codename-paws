version: '3'
services:
  frontend:
    image: frontend
    build:
      context: frontend
      dockerfile: dev.Dockerfile
    ports:
      # because load-balancer:
      - 8080
    volumes:
      - ./frontend/src:/app/src
    environment:
      - CHOKIDAR_USEPOLLING=true
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.frontend.rule=Host(`app.localhost`)'
      - 'traefik.http.routers.frontend.entrypoints=web'
  backend:
    image: backend
    build:
      context: backend
      dockerfile: dev.Dockerfile
    environment:
      - MONGODB_CONNECTION_STRING=mongodb://mongo/codename-paws
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.backend.rule=(Host(`app.localhost`) && PathPrefix(`/api`))'
      - 'traefik.http.routers.backend.entrypoints=web'
    ports:
      # because load-balancer:
      - 3000
      - 35729:35729
    volumes:
      - ./backend/src:/app/src
      - ./backend/test:/app/test
  mongo:
    image: mongo
    ports:
      - 27017:27017
    logging:
      driver: none
  load-balancer:
    image: traefik:v2.2
    command:
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
    ports:
      - '80:80'
      - '8080:8080'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    environment:
      - CHOKIDAR_USEPOLLING=true
